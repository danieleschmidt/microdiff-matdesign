[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "microdiff-matdesign"
dynamic = ["version"]
description = "Diffusion model framework for inverse material design"
authors = [{name = "Daniel Schmidt", email = "daniel@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "scikit-image>=0.19.0",
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "pillow>=8.3.0",
    "numba>=0.56.0",
    "h5py>=3.6.0",
    "xarray>=0.19.0",
    "dask>=2021.9.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "click>=8.0.0",
    "tqdm>=4.62.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
gpu = ["torch[cuda]", "cupy"]
full = ["jupyter", "matplotlib", "plotly", "tqdm"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "coverage[toml]>=7.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "nbsphinx>=0.9.0",
    "isort>=5.12.0",
    "interrogate>=1.5.0",
]

[project.scripts]
microdiff = "microdiff_matdesign.cli:main"

[project.entry-points."microdiff_matdesign.processes"]
lpbf = "microdiff_matdesign.processes.lpbf:LPBFOptimizer"
ebm = "microdiff_matdesign.processes.ebm:EBMOptimizer"
ded = "microdiff_matdesign.processes.ded:DEDOptimizer"

[project.entry-points."microdiff_matdesign.alloys"]
ti64 = "microdiff_matdesign.alloys.ti64:Ti6Al4V"
inconel718 = "microdiff_matdesign.alloys.inconel:Inconel718"
alsi10mg = "microdiff_matdesign.alloys.alsi:AlSi10Mg"

[project.urls]
Homepage = "https://github.com/yourusername/microdiff-matdesign"
Repository = "https://github.com/yourusername/microdiff-matdesign"
Issues = "https://github.com/yourusername/microdiff-matdesign/issues"

[tool.setuptools_scm]
write_to = "microdiff_matdesign/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "B905",  # zip strict argument
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["S101", "S311"]

[tool.ruff.isort]
known-first-party = ["microdiff_matdesign"]
force-sort-within-sections = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--cov=microdiff_matdesign",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["microdiff_matdesign"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["microdiff_matdesign"]
force_sort_within_sections = true

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
fail-under = 80
exclude = ["setup.py", "docs", "build"]
verbose = 0
quiet = false
whitelist-regex = []
color = true