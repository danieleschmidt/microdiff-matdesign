# =============================================================================
# MicroDiff-MatDesign Environment Configuration
# =============================================================================
# Copy this file to .env and configure for your environment

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Project root directory (auto-detected if not set)
PROJECT_ROOT=

# Logging configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/microdiff.log

# =============================================================================
# COMPUTATION CONFIGURATION
# =============================================================================

# Device configuration (auto-detect if not set)
# Options: auto, cpu, cuda, cuda:0, cuda:1, etc.
DEVICE=auto

# Number of CPU cores to use (0 = auto-detect)
NUM_WORKERS=0

# Memory limits
MAX_MEMORY_GB=16
GPU_MEMORY_FRACTION=0.8

# Mixed precision training
USE_MIXED_PRECISION=true

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================

# Model storage directory
MODEL_DIR=models/

# Pre-trained models cache directory
PRETRAINED_CACHE_DIR=~/.cache/microdiff-matdesign/

# Model version tracking
MODEL_REGISTRY_URL=

# Default model parameters
DEFAULT_DIFFUSION_STEPS=1000
DEFAULT_GUIDANCE_SCALE=7.5
DEFAULT_NUM_SAMPLES=10

# =============================================================================
# DATA CONFIGURATION
# =============================================================================

# Data directories
DATA_DIR=data/
DATASET_CACHE_DIR=~/.cache/microdiff-datasets/
MICROCT_DATA_DIR=data/microct/
PARAMETERS_DATA_DIR=data/parameters/

# Data preprocessing
VOXEL_SIZE=0.5
VOLUME_SIZE=256
AUGMENTATION_ENABLED=true

# Batch processing
BATCH_SIZE=8
PREFETCH_FACTOR=2

# =============================================================================
# TRAINING CONFIGURATION  
# =============================================================================

# Training parameters
LEARNING_RATE=1e-4
EPOCHS=500
WARMUP_STEPS=1000
WEIGHT_DECAY=1e-6

# Checkpoint configuration
CHECKPOINT_DIR=checkpoints/
SAVE_EVERY_N_EPOCHS=50
KEEP_LAST_N_CHECKPOINTS=5

# Validation
VALIDATION_SPLIT=0.2
VALIDATION_FREQ=10

# =============================================================================
# OPTIMIZATION CONFIGURATION
# =============================================================================

# Multi-objective optimization
OPTIMIZATION_ALGORITHM=nsga2
MAX_ITERATIONS=100
POPULATION_SIZE=50

# Manufacturing constraints
ENABLE_CONSTRAINTS=true
CONSTRAINT_TOLERANCE=0.05

# =============================================================================
# ALLOY CONFIGURATION
# =============================================================================

# Default alloy for new projects
DEFAULT_ALLOY=Ti-6Al-4V

# Alloy-specific parameters (example for Ti-6Al-4V)
TI64_DENSITY=4.43
TI64_MELTING_POINT=1604
TI64_THERMAL_CONDUCTIVITY=6.7

# =============================================================================
# PROCESS CONFIGURATION
# =============================================================================

# Default manufacturing process
DEFAULT_PROCESS=laser_powder_bed_fusion

# LPBF-specific parameters
LPBF_LASER_POWER_MIN=50
LPBF_LASER_POWER_MAX=400
LPBF_SCAN_SPEED_MIN=200
LPBF_SCAN_SPEED_MAX=2000
LPBF_LAYER_THICKNESS_MIN=20
LPBF_LAYER_THICKNESS_MAX=100

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Metrics collection
ENABLE_METRICS=true
METRICS_PORT=9090
METRICS_PATH=/metrics

# Distributed tracing
ENABLE_TRACING=false
JAEGER_ENDPOINT=http://localhost:14268/api/traces

# Health checks
HEALTH_CHECK_PORT=8080
HEALTH_CHECK_PATH=/health

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# API authentication (if using web interface)
API_KEY=
JWT_SECRET=

# Rate limiting
RATE_LIMIT_ENABLED=false
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Model registry (MLflow, Weights & Biases, etc.)
MLFLOW_TRACKING_URI=
WANDB_PROJECT_NAME=
WANDB_ENTITY=

# Cloud storage (AWS S3, Google Cloud Storage, Azure Blob)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
S3_BUCKET_NAME=

# Database (for experiment tracking)
DATABASE_URL=sqlite:///experiments.db

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Debug mode
DEBUG=false
VERBOSE=false

# Development tools
ENABLE_PROFILING=false
PROFILING_OUTPUT_DIR=profiling/

# Testing
TEST_DATA_DIR=tests/data/
RUN_SLOW_TESTS=false
GENERATE_TEST_DATA=false

# Documentation
DOCS_BUILD_DIR=docs/_build/
API_DOCS_ENABLED=true

# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================

# Performance optimization
OPTIMIZE_FOR_INFERENCE=true
ENABLE_MODEL_COMPILATION=true
USE_TENSORRT=false

# Resource limits
MAX_CONCURRENT_REQUESTS=10
REQUEST_TIMEOUT=300

# Backup and disaster recovery
BACKUP_ENABLED=false
BACKUP_DIRECTORY=backups/
BACKUP_FREQUENCY=daily

# =============================================================================
# DOCKER CONFIGURATION (for containerized deployments)
# =============================================================================

# Container resource limits
DOCKER_MEMORY_LIMIT=16g
DOCKER_CPU_LIMIT=8
DOCKER_GPU_COUNT=1

# Volume mounts
DOCKER_DATA_VOLUME=/data
DOCKER_MODEL_VOLUME=/models
DOCKER_LOGS_VOLUME=/logs